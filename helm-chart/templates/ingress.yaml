apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.webui.name }}-ingress
  namespace: {{ .Values.webui.namespace}}
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    kubernetes.io/ingress.class: public
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/rewrite-target: "/$1"
spec:
  rules:
  - host: pinfo3.unige.ch
    http:
      paths:
      - path: "/(.*)(/|$)"
        pathType: Prefix
        backend:
          service:
            name: {{ .Values.webui.name }}-service
            port:
              name: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.stockmanagement.name }}-ingress
  namespace: {{ .Values.stockmanagement.namespace}}
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    kubernetes.io/ingress.class: public
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/rewrite-target: "/$1/$3"
    nginx.ingress.kubernetes.io/client-body-buffer-size: 5m
    nginx.ingress.kubernetes.io/proxy-body-size: 15m
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.org/client-max-body-size: 15m
spec:
  tls:
  - hosts:
    - pinfo3.unige.ch
    secretName: letsencrypt-prod
  rules:
  - host: pinfo3.unige.ch
    http:
      paths:
      - path: "/api/(stock)(/|$)(.*)"
        pathType: ImplementationSpecific
        backend:
          service:
            name: {{ .Values.stockmanagement.name }}-service
            port:
              number: {{ .Values.stockmanagement.port }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.payment.name }}-ingress
  namespace: {{ .Values.payment.namespace }}
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    kubernetes.io/ingress.class: public
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/rewrite-target: "/$1/$3"
    nginx.ingress.kubernetes.io/client-body-buffer-size: 5m
    nginx.ingress.kubernetes.io/proxy-body-size: 15m
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.org/client-max-body-size: 15m
spec:
  tls:
  - hosts:
    - pinfo3.unige.ch
    secretName: letsencrypt-prod
  rules:
  - host: pinfo3.unige.ch
    http:
      paths:
      - path: "/api/(payment)(/|$)(.*)"
        pathType: ImplementationSpecific
        backend:
          service:
            name: {{ .Values.payment.name }}-service
            port:
              number: {{ .Values.payment.port }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.customization.name }}-ingress
  namespace: {{ .Values.customization.namespace}}
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    kubernetes.io/ingress.class: public
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/rewrite-target: "/$1/$3"
    nginx.ingress.kubernetes.io/client-body-buffer-size: 5m
    nginx.ingress.kubernetes.io/proxy-body-size: 15m
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.org/client-max-body-size: 15m
spec:
  tls:
  - hosts:
    - pinfo3.unige.ch
    secretName: letsencrypt-prod
  rules:
  - host: pinfo3.unige.ch
    http:
      paths:
      - path: "/api/(customization)(/|$)(.*)"
        pathType: ImplementationSpecific
        backend:
          service:
            name: {{ .Values.customization.name }}-service
            port:
              number: {{ .Values.customization.port }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.backoffice.name }}-ingress
  namespace: {{ .Values.backoffice.namespace }}
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    kubernetes.io/ingress.class: public
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/rewrite-target: "/$1/$3"
    nginx.ingress.kubernetes.io/client-body-buffer-size: 5m
    nginx.ingress.kubernetes.io/proxy-body-size: 15m
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.org/client-max-body-size: 15m
spec:
  tls:
  - hosts:
    - pinfo3.unige.ch
    secretName: letsencrypt-prod
  rules:
  - host: pinfo3.unige.ch
    http:
      paths:
      - path: "/api/(stats)(/|$)(.*)"
        pathType: ImplementationSpecific
        backend:
          service:
            name: {{ .Values.backoffice.name }}-service
            port:
              number: {{ .Values.backoffice.port }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.statsjwt.name }}-ingress
  namespace: {{ .Values.statsjwt.namespace }}
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    kubernetes.io/ingress.class: public
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/rewrite-target: "/$1/$3"
    nginx.ingress.kubernetes.io/client-body-buffer-size: 5m
    nginx.ingress.kubernetes.io/proxy-body-size: 15m
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.org/client-max-body-size: 15m
spec:
  tls:
  - hosts:
    - pinfo3.unige.ch
    secretName: letsencrypt-prod
  rules:
  - host: pinfo3.unige.ch
    http:
      paths:
      - path: "/api/(jwt)(/|$)(.*)"
        pathType: ImplementationSpecific
        backend:
          service:
            name: {{ .Values.statsjwt.name }}-service
            port:
              number: {{ .Values.statsjwt.port }}

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web-ui-ingress
  namespace: web-ui
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    kubernetes.io/ingress.class: public
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/rewrite-target: "/$1"
spec:
  rules:
  - host: pinfo3.unige.ch
    http:
      paths:
      - path: "/(.*)(/|$)"
        pathType: Prefix
        backend:
          service:
            name: web-ui-service
            port:
              name: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: stock-management-ingress
  namespace: stock-management
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    kubernetes.io/ingress.class: public
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/rewrite-target: "/$1/$3"
    nginx.ingress.kubernetes.io/client-body-buffer-size: 5m
    nginx.ingress.kubernetes.io/proxy-body-size: 15m
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.org/client-max-body-size: 15m
spec:
  tls:
  - hosts:
    - pinfo3.unige.ch
    secretName: letsencrypt-prod
  rules:
  - host: pinfo3.unige.ch
    http:
      paths:
      - path: "/api/(stock)(/|$)(.*)"
        pathType: ImplementationSpecific
        backend:
          service:
            name: stock-management-service
            port:
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: back-office-ingress
  namespace: back-office
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    kubernetes.io/ingress.class: public
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/rewrite-target: "/$1/$3"
    nginx.ingress.kubernetes.io/client-body-buffer-size: 5m
    nginx.ingress.kubernetes.io/proxy-body-size: 15m
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.org/client-max-body-size: 15m
spec:
  tls:
  - hosts:
    - pinfo3.unige.ch
    secretName: letsencrypt-prod
  rules:
  - host: pinfo3.unige.ch
    http:
      paths:
      - path: "/api/(stats)(/|$)(.*)"
        pathType: ImplementationSpecific
        backend:
          service:
            name: back-office-service
            port:
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: stats-jwt-ingress
  namespace: stats-jwt
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    kubernetes.io/ingress.class: public
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/rewrite-target: "/$1/$3"
    nginx.ingress.kubernetes.io/client-body-buffer-size: 5m
    nginx.ingress.kubernetes.io/proxy-body-size: 15m
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.org/client-max-body-size: 15m
spec:
  tls:
  - hosts:
    - pinfo3.unige.ch
    secretName: letsencrypt-prod
  rules:
  - host: pinfo3.unige.ch
    http:
      paths:
      - path: "/api/(jwt)(/|$)(.*)"
        pathType: ImplementationSpecific
        backend:
          service:
            name: stats-jwt-service
            port:
              number: 80

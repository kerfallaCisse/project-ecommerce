



#sonarqube-check:
#  stage: sonarqube
#  image: maven:3.8.4-openjdk-17-slim
#  variables:
#    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
#    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
#  cache:
#    key: "${CI_JOB_NAME}"
#    paths:
#      - .sonar/cache
#  script: 
#    - mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=pinfo3-2023_pinfo3
#    - mvn verify sonar:sonar -Dsonar.projectKey=pinfo3-2023_pinfo3 -Dsonar.organization=$ORG -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN
#  allow_failure: true
#  only:
#    - main


#build:
#  stage: mvn-build
#  image: maven:3.8.4-openjdk-17-slim
#  script:
#    - pwd
#    - java -version
#    - cd getting-started
#    - pwd
#    - mvn package
#    - ls -al
#  artifacts:
#    paths:
#      - target
#  only:
#    - main

#docker-setup:
#  stage: docker
#  image: docker:20.10.17
#  script:
#    - docker login registry.gitlab.unige.ch --username $DOCKER_USER --password $DOCKER_PASSWORD
#    - cd getting-started
#    - pwd
#    - docker --version
#    - ls -al
#    - service docker status
#    - docker build -f src/main/docker/Dockerfile.jvm .
#  dependencies:
#    - build

variables:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dmaven.repo.local=/builds/pinfo-2023/pinfo-2/project-ecommerce/.m2/repository"

stages:
#  - sonarqube
  - deploy

cache:
  paths:
    - .m2/repository


# For merge requests do not `deploy` but only run `verify`.
# See https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html
.verify: &verify
  stage: test
  script:
    - 'mvn $MAVEN_CLI_OPTS verify'

image: maven:3.6.3-openjdk-17-slim

deploy-images:
  stage: deploy
  script:
    - mvn --version
    - java --version
    - apt-get update && apt-get -qy full-upgrade && apt-get install -qy curl && apt-get install -qy curl && curl -sSL https://get.docker.com/ | sh
    - docker login registry.gitlab.unige.ch --username $DOCKER_USER --password $DOCKER_PASSWORD
    - cd getting-started
    - pwd
    - mvn clean install
    - ls -al ~/.m2/repository
    - ./mvnw package






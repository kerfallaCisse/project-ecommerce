stages:
#  - sonarqube
  - mvn-build
  - docker



#sonarqube-check:
#  stage: sonarqube
#  image: maven:3.8.4-openjdk-17-slim
#  variables:
#    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
#    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
#  cache:
#    key: "${CI_JOB_NAME}"
#    paths:
#      - .sonar/cache
#  script: 
#    - mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=pinfo3-2023_pinfo3
#    - mvn verify sonar:sonar -Dsonar.projectKey=pinfo3-2023_pinfo3 -Dsonar.organization=$ORG -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN
#  allow_failure: true
#  only:
#    - main


build:
  stage: mvn-build
  image: maven:3.8.4-openjdk-17-slim
  script:
    - pwd
    - java -version
    - cd getting-started
    - pwd
    - mvn package
    - ls -al
  artifacts:
    paths:
      - target
  only:
    - main

docker-setup:
  stage: docker
  image: docker:20.10.17
  script:
    - docker login registry.gitlab.unige.ch --username $DOCKER_USER --password $DOCKER_PASSWORD
    - cd getting-started
    - pwd
    - docker --version
    - ls -al
    - sudo service docker status
    - docker build -f src/main/docker/Dockerfile.jvm .
  dependencies:
    - build





image: maven:3.6.3-openjdk-17-slim

stages:
  - deploy
  - sonarcloud-integration
  - build
  - test
  - image-push

sonarcloud-check-branch:
  stage: sonarcloud-integration
  image: maven:3.6.3-jdk-11
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - mvn verify sonar:sonar -Dsonar.projectKey=invia -Dsonar.organization=$ORG -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN


mvn-build-stock-management:
  stage:  build
  script: 
    - cd stock-management
    -  mvn clean package -DskipTests
  artifacts:
    paths:
      - stock-management/target
    expire_in: 2 hours
  only:
    - main
    - schedules
    - denis

test-stock-management:
  stage: test
  dependencies:
    - mvn-build-stock-management
  script:
    - cd stock-management
    - mvn test
  only:
    - main
    - denis


container-image-stock-management:
  stage: image-push
  dependencies:
    - mvn-build-stock-management
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --build-arg MYSQL_USER=${MYSQL_USER}
      --build-arg MYSQL_PASSWORD=${MYSQL_PASSWORD}
      --build-arg MYSQL_URL=${MYSQL_URL}
      --context "${CI_PROJECT_DIR}/stock-management"
      --dockerfile "${CI_PROJECT_DIR}/stock-management/src/main/docker/Dockerfile.jvm"
      --destination "registry.gitlab.unige.ch/pinfo-2023/pinfo-2/project-ecommerce/stock-management:latest"
  only:
    - schedules


  
mvn-build-backoffice-service:
  stage:  build
  script: 
    - cd backoffice_service/stats
    -  mvn clean package -DskipTests
  artifacts:
    paths:
      - backoffice_service/stats/target
    expire_in: 2 hours
  only:
    - main
    - schedules

test-backoffice-service:
  stage: test
  dependencies:
    - mvn-build-backoffice-service
  script:
    - cd backoffice_service/stats
    - mvn test
  only:
    - main


container-image-backoffice-service:
  stage: image-push
  dependencies:
    - mvn-build-backoffice-service
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --build-arg MYSQL_USER=${MYSQL_USER}
      --build-arg MYSQL_PASSWORD=${MYSQL_PASSWORD}
      --build-arg MYSQL_URL=${MYSQL_URL}
      --context "${CI_PROJECT_DIR}/backoffice_service/stats"
      --dockerfile "${CI_PROJECT_DIR}/backoffice_service/stats/src/main/docker/Dockerfile.jvm"
      --destination "registry.gitlab.unige.ch/pinfo-2023/pinfo-2/project-ecommerce/back-office:latest"
  only:
    - schedules


mvn-build-stats-jwt:
  stage:  build
  script: 
    - cd stats-jwt
    -  mvn clean package -DskipTests
  artifacts:
    paths:
      - stats-jwt/target
    expire_in: 2 hours
  only:
    - main
    - schedules

test-stats-jwt:
  stage: test
  dependencies:
    - mvn-build-stats-jwt
  script:
    - cd stats-jwt
    - mvn test
  only:
    - main



container-image-stats-jwt:
  stage: image-push
  dependencies:
    - mvn-build-stats-jwt
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --build-arg MYSQL_USER=${MYSQL_USER}
      --build-arg MYSQL_PASSWORD=${MYSQL_PASSWORD}
      --build-arg MYSQL_URL=${MYSQL_URL}
      --context "${CI_PROJECT_DIR}/stats-jwt"
      --dockerfile "${CI_PROJECT_DIR}/stats-jwt/src/main/docker/Dockerfile.jvm"
      --destination "registry.gitlab.unige.ch/pinfo-2023/pinfo-2/project-ecommerce/stats-jwt:latest"
  only:
    - schedules

npm-build-ui:
  stage: build
  image: node:16.14.2-alpine3.14
  script:
    - cd web_ui
    - npm i
    - npm run build --prod
  only:
    - main
    - schedules

test-ui:
  stage: test
  image: node:16.14.2-alpine3.14
  script:
    - cd web_ui
    - npm i
    - npm test
  only:
    - none



container-image-web-ui:
  stage: image-push
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/web_ui"
      --dockerfile "${CI_PROJECT_DIR}/web_ui/Dockerfile"
      --destination "registry.gitlab.unige.ch/pinfo-2023/pinfo-2/project-ecommerce/web-ui:latest"
  only:
    - schedules


deploy:
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint: ['']
  script:
    - export KUBECONFIG=${CONNECT}
    - kubectl get namespaces

deployment:
  stage: deploy
  image: alpine/helm:3.2.1
  script:
    - export KUBECONFIG=${CONNECT}
    - ls -al
   # - helm upgrade --install invia ./helm-chart





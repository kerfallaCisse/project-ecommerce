variables:
  VERSION : "0.1.6-SNAPSHOT"


image: maven:3.6.3-openjdk-17-slim

stages:
  - securefile
  - sonarcloud-integration
  - build
  - image-push
  - test
  - image-push
  - deploy


alpine-latest:
  image: alpine
  stage: securefile
  script:
    - curl -s https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer | bash  
    - ls -lah ~/.secure_files
    - mkdir -p statistic_service/src/main/resources/tokens/


sonarcloud-check-branch:
  stage: sonarcloud-integration
  image: maven:3.6.3-openjdk-17-slim
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - mvn verify sonar:sonar -Dsonar.projectKey=invia -Dsonar.organization=$ORG -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN


mvn-build-stock-management:
  stage:  build
  script: 
    - cd stock-management
    -  mvn clean package -DskipTests
  artifacts:
    paths:
      - stock-management/target
    expire_in: 2 hours
  only:
    - main
    - schedules
    - denis


test-stock-management:
  stage: test
  dependencies:
    - mvn-build-stock-management
  script:
    - cd stock-management
    - mvn help:evaluate -Dexpression=project.version -q -DforceStdout
    - mvn test
  only:
    - schedules
    - denis


container-image-stock-management:
  stage: image-push
  dependencies:
    - mvn-build-stock-management
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --build-arg MYSQL_USER=${MYSQL_USER}
      --build-arg MYSQL_PASSWORD=${MYSQL_PASSWORD}
      --build-arg MYSQL_URL=${MYSQL_URL}
      --context "${CI_PROJECT_DIR}/stock-management"
      --dockerfile "${CI_PROJECT_DIR}/stock-management/src/main/docker/Dockerfile.jvm"
      --destination "registry.gitlab.unige.ch/pinfo-2023/pinfo-2/project-ecommerce/stock-management:${VERSION}"
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /.*\[production\].*/
      - $CI_PIPELINE_SOURCE == "schedule"
      - $CI_COMMIT_REF_NAME == "main"




mvn-build-customization:
  stage:  build
  script: 
    - cd customization 
    -  mvn clean package -DskipTests
  artifacts:
    paths:
      - customization/target
    expire_in: 2 hours
  only:
    - main
    - schedules


test-customization:
  stage: test
  dependencies:
    - mvn-build-customization 
  script:
    - cd customization 
    - mvn help:evaluate -Dexpression=project.version -q -DforceStdout
    - mvn test
  only:
    - schedules


container-image-customization:
  stage: image-push
  dependencies:
    - mvn-build-customization 
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --build-arg MYSQL_USER=${MYSQL_USER}
      --build-arg MYSQL_PASSWORD=${MYSQL_PASSWORD}
      --build-arg MYSQL_URL=${MYSQL_URL}
      --context "${CI_PROJECT_DIR}/customization"
      --dockerfile "${CI_PROJECT_DIR}/customization/src/main/docker/Dockerfile.jvm"
      --destination "registry.gitlab.unige.ch/pinfo-2023/pinfo-2/project-ecommerce/customization:${VERSION}"
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /.*\[production\].*/
      - $CI_PIPELINE_SOURCE == "schedule"
      - $CI_COMMIT_REF_NAME == "main"



mvn-build-payment :
  stage:  build
  script: 
    - cd payment-service 
    -  mvn clean package -DskipTests
  artifacts:
    paths:
      - payment-service/target
    expire_in: 2 hours
  only:
    - main
    - schedules


test-payment:
  stage: test
  dependencies:
    - mvn-build-payment
  script:
    - cd payment-service 
    - mvn help:evaluate -Dexpression=project.version -q -DforceStdout
    - mvn test
  only:
    - schedules



container-image-payment:
  stage: image-push
  dependencies:
    - mvn-build-payment
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --build-arg STRIPE_SECRET=${STRIPE_SECRET}
      --build-arg MYSQL_USER=${MYSQL_USER}
      --build-arg MYSQL_PASSWORD=${MYSQL_PASSWORD}
      --build-arg MYSQL_URL=${MYSQL_URL}
      --context "${CI_PROJECT_DIR}/payment-service"
      --dockerfile "${CI_PROJECT_DIR}/payment-service/src/main/docker/Dockerfile.jvm"
      --destination "registry.gitlab.unige.ch/pinfo-2023/pinfo-2/project-ecommerce/payment-service:${VERSION}"
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /.*\[production\].*/
      - $CI_PIPELINE_SOURCE == "schedule"
      - $CI_COMMIT_REF_NAME == "main"



mvn-build-statistics:
  stage:  build
  script: 
    - cd statistic_service
    -  mvn clean package -DskipTests
  artifacts:
    paths:
      - statistic_service/target
    expire_in: 2 hours
  only:
    - main
    - schedules


test-statistics:
  stage: test
  dependencies:
    - mvn-build-statistics 
  variables:
    SECURE_FILES_DOWNLOAD_PATH: ''
  before_script:
    - ls
    - mkdir -p statistic_service/src/main/resources/tokens/
    - touch statistic_service/src/main/resources/tokens/StoredCredential
    - echo "$STOREDCRED" > statistic_service/src/main/resources/tokens/StoredCredential
    - curl --silent "https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer" | bash
  script:
    - cd statistic_service 
    - mvn help:evaluate -Dexpression=project.version -q -DforceStdout
    - mvn test
  only:
    - kerfalla
    - schedules


container-image-statistics:
  stage: image-push
  dependencies:
    - mvn-build-statistics 
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --build-arg MYSQL_USER=${MYSQL_USER}
      --build-arg MYSQL_PASSWORD=${MYSQL_PASSWORD}
      --build-arg MYSQL_URL=${MYSQL_URL}
      --build-arg INVIA_EMAIL=${INVIA_EMAIL}
      --build-arg GMAIL_API_SECRET=${GMAIL_API_SECRET}
      --context "${CI_PROJECT_DIR}/statistic_service"
      --dockerfile "${CI_PROJECT_DIR}/statistic_service/src/main/docker/Dockerfile.jvm"
      --destination "registry.gitlab.unige.ch/pinfo-2023/pinfo-2/project-ecommerce/statistics:${VERSION}"
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /.*\[production\].*/
      - $CI_PIPELINE_SOURCE == "schedule"
      - $CI_COMMIT_REF_NAME == "main"



  
mvn-build-auth:
  stage:  build
  script: 
    - cd auth_service 
    -  mvn clean package -DskipTests
  artifacts:
    paths:
      - auth_service/target
    expire_in: 2 hours
  only:
    - main
    - kerfalla
    - schedules


test-auth:
  stage: test
  dependencies:
    - mvn-build-auth
  script:
    - cd auth_service 
    - mvn help:evaluate -Dexpression=project.version -q -DforceStdout
    - mvn test
  only:
    - kerfalla
    - schedules


container-image-auth:
  stage: image-push
  dependencies:
    - mvn-build-auth
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --build-arg MYSQL_USER=${MYSQL_USER}
      --build-arg MYSQL_PASSWORD=${MYSQL_PASSWORD}
      --build-arg MYSQL_URL=${MYSQL_URL}
      --build-arg CLIENT_SECRET=${CLIENT_SECRET}
      --build-arg CLIENT_ID=${CLIENT_ID}
      --build-arg AUTH_DOMAIN=${AUTH_DOMAIN}
      --build-arg API_TOKEN=${API_TOKEN}
      --context "${CI_PROJECT_DIR}/auth_service"
      --dockerfile "${CI_PROJECT_DIR}/auth_service/src/main/docker/Dockerfile.jvm"
      --destination "registry.gitlab.unige.ch/pinfo-2023/pinfo-2/project-ecommerce/auth:${VERSION}"
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /.*\[production\].*/
      - $CI_PIPELINE_SOURCE == "schedule"
      - $CI_COMMIT_REF_NAME == "main"


npm-build-ui:
  stage: build
  image: node:16.14.2-alpine3.14
  script:
    - cd web_ui
    - npm i
    - npm run build --prod
  only:
    - main
    - schedules


test-ui:
  stage: test
  image: node:16.14.2-alpine3.14
  script:
    - cd web_ui
    - npm i
    - npm test
  only:
    - none



container-image-web-ui:
  stage: image-push
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/web_ui"
      --dockerfile "${CI_PROJECT_DIR}/web_ui/Dockerfile"
      --destination "registry.gitlab.unige.ch/pinfo-2023/pinfo-2/project-ecommerce/web-ui:${VERSION}"
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /.*\[production\].*/
      - $CI_PIPELINE_SOURCE == "schedule"
      - $CI_COMMIT_REF_NAME == "main"

 
deploy:
  stage: deploy
  image: alpine/helm:3.2.1
  script:
    - export KUBECONFIG=${KUBECONFIG}
    - helm uninstall invia --namespace default
    - helm upgrade --install invia ./helm-chart --namespace default
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /.*\[production\].*/
      - $CI_PIPELINE_SOURCE == "schedule"
      - $CI_COMMIT_MESSAGE =~ /.*\[helm\].*/
      - $CI_COMMIT_REF_NAME == "main"







